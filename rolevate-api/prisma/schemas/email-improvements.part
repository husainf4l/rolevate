// Enhanced Email and Communication models
// This file contains improved email-related models with better security and performance

// Enhanced SMTP Configuration with better security
model SmtpConfiguration {
  id            String @id @default(cuid())

  // Configuration name and description
  name_en       String @db.VarChar(100)
  name_ar       String @db.VarChar(100)
  description   String? @db.VarChar(500)
  isDefault     Boolean @default(false)
  isActive      Boolean @default(true)

  // SMTP Server Settings
  host          String @db.VarChar(255)
  port          Int @default(587) @db.SmallInt
  secure        Boolean @default(false) // true for 465, false for other ports

  // Authentication with security
  username      String @db.VarChar(255) // SMTP username
  password      String @db.Text // Encrypted SMTP password
  isPasswordEncrypted Boolean @default(true)

  // Email Settings
  fromEmail     String @db.VarChar(255) // Default sender email
  fromName_en   String @db.VarChar(100) // Default sender name in English
  fromName_ar   String @db.VarChar(100) // Default sender name in Arabic

  // Optional advanced settings
  encryption    String? @db.VarChar(10) // "tls", "ssl", or null
  timeout       Int? @default(30000) // Connection timeout in ms

  // Rate limiting
  maxEmailsPerHour Int? @default(100)
  maxEmailsPerDay  Int? @default(1000)

  // Company relationship (for multi-tenant setups)
  companyId     String?
  company       Company? @relation(fields: [companyId], references: [id], onDelete: Cascade)

  // Usage tracking
  emailsSent    Int @default(0)
  lastUsedAt    DateTime?

  // Health monitoring
  lastHealthCheck DateTime?
  isHealthy       Boolean @default(true)
  lastError       String? @db.Text

  // Relationships
  emailTemplates EmailTemplate[]
  emailLogs     EmailLog[]

  // Audit fields
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Performance indexes
  @@index([isDefault])
  @@index([isActive])
  @@index([companyId])
  @@index([isHealthy])

  @@map("smtp_configurations")
}

// Enhanced Email Log with better tracking
model EmailLog {
  id            String @id @default(cuid())

  // Email details
  toEmail       String @db.VarChar(255)
  fromEmail     String @db.VarChar(255)
  subject       String @db.VarChar(500)
  body          String? @db.Text

  // Template used
  templateId    String?
  template      EmailTemplate? @relation(fields: [templateId], references: [id])

  // SMTP Configuration used
  smtpConfigId  String?
  smtpConfig    SmtpConfiguration? @relation(fields: [smtpConfigId], references: [id])

  // Email type
  typeId        String?
  emailType     EmailType? @relation(fields: [typeId], references: [id])

  // User relationships
  sentToUserId  String? // If sent to a registered user
  sentToUser    User? @relation("EmailsSentTo", fields: [sentToUserId], references: [id])

  sentByUserId  String? // Who triggered the email
  sentByUser    User? @relation("EmailsSentBy", fields: [sentByUserId], references: [id])

  // Status and tracking with enum
  status        EmailStatus @default(PENDING)
  errorMessage  String? @db.Text

  // Enhanced delivery tracking
  sentAt        DateTime?
  deliveredAt   DateTime?
  openedAt      DateTime?
  clickedAt     DateTime?
  bouncedAt     DateTime?

  // Analytics
  openCount     Int @default(0)
  clickCount    Int @default(0)
  unsubscribed  Boolean @default(false)
  unsubscribedAt DateTime?

  // Priority and retry logic
  priority      Int @default(5) @db.SmallInt // 1-10, 10 being highest
  retryCount    Int @default(0) @db.SmallInt
  maxRetries    Int @default(3) @db.SmallInt
  nextRetryAt   DateTime?

  // Metadata
  messageId     String? @db.VarChar(255) // Email service message ID
  metadata      Json? @db.JsonB // Additional tracking data

  // Audit fields
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Performance indexes
  @@index([status])
  @@index([sentAt])
  @@index([toEmail])
  @@index([sentToUserId])
  @@index([sentByUserId])
  @@index([templateId])
  @@index([typeId])
  @@index([priority])
  @@index([nextRetryAt])
  @@index([createdAt])

  // Note: Check constraints would validate priority (1-10), retryCount >= 0, maxRetries >= 0
  // These validations should be handled at application level

  @@map("email_logs")
}

// Enhanced Email Template with versioning
model EmailTemplate {
  id            String @id @default(cuid())

  // Template identification
  name_en       String @db.VarChar(200)
  name_ar       String @db.VarChar(200)
  code          String @unique @db.VarChar(100) // e.g., "welcome_email", "job_application_received"
  description   String? @db.VarChar(500)

  // Template content
  subject_en    String @db.VarChar(300)
  subject_ar    String @db.VarChar(300)
  body_en       String @db.Text // HTML or text content
  body_ar       String @db.Text // HTML or text content

  // Template preview text (for email clients)
  previewText_en String? @db.VarChar(200)
  previewText_ar String? @db.VarChar(200)

  // Template type and category
  typeId        String?
  emailType     EmailType? @relation(fields: [typeId], references: [id])

  // Template settings
  isHtml        Boolean @default(true)
  isActive      Boolean @default(true)
  isSystem      Boolean @default(false) // System templates cannot be deleted

  // Versioning
  version       Int @default(1)
  parentTemplateId String? // For template versions
  isPublished   Boolean @default(false)

  // SMTP Configuration
  smtpConfigId  String?
  smtpConfig    SmtpConfiguration? @relation(fields: [smtpConfigId], references: [id])

  // Company relationship (for custom templates)
  companyId     String?
  company       Company? @relation(fields: [companyId], references: [id], onDelete: Cascade)

  // Usage tracking
  timesUsed     Int @default(0)
  lastUsedAt    DateTime?

  // A/B Testing
  abTestGroup   String? @db.VarChar(50) // "A", "B", etc.
  conversionRate Decimal? @db.Decimal(5,4) // Success rate

  // Template variables (JSON schema)
  variablesSchema Json? @db.JsonB

  // Relationships
  emailLogs     EmailLog[]

  // Audit fields
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Performance indexes
  @@index([code])
  @@index([isActive])
  @@index([isSystem])
  @@index([typeId])
  @@index([companyId])
  @@index([version])
  @@index([isPublished])

  @@map("email_templates")
}